package net.obviam.nanaquest.screens;

import net.obviam.nanaquest.NanaQuest;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.ui.ImageButton;
import com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle;
import com.badlogic.gdx.scenes.scene2d.ui.Skin;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.utils.ClickListener;

public class MainMenu implements Screen {
        
        private Stage stage;
        private TextureAtlas atlas;
        private Skin skin;
        
        //Appearance
        private Table table;
        private ImageButton startButton;
        private ImageButton quitButton;
        final NanaQuest 	game;
        
        public MainMenu(final NanaQuest g){
                game = g;
        }
        @Override
        public void render(float delta) {
                Gdx.gl.glClearColor(0, 0, 0, 1);
                Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
                        //Clear everything with black background
                Table.drawDebug(stage);
                        //Draws debug lines
                stage.act(delta);
                        //Update everything in the stage
                stage.draw();
                        //Everything becomes visible
        }

        @Override
        public void resize(int width, int height) {
                
                
        }

        @Override
        public void show() {
                stage = new Stage(960, 640, true);
                
                Gdx.input.setInputProcessor(stage);
                
                
                atlas = new TextureAtlas(Gdx.files.internal("images/textures/menuPack.txt"));
                        //Atlas defines regions of sprite image that will be created
                skin = new Skin();
                skin.addRegions(atlas);
                
                // Create table
                table = new Table(skin);
                table.setBounds(0, 0, 960, 640);
                
                // Start Button
                ImageButtonStyle startB = new ImageButtonStyle();
                startB.up = skin.getDrawable("start_button.fw");
                startB.down = skin.getDrawable("start_button_down.fw");
                
                // Quit Button
                ImageButtonStyle quitB = new ImageButtonStyle();
                quitB.up = skin.getDrawable("quit_button.fw");
                quitB.down = skin.getDrawable("quit_button_down.fw");
                
                startButton = new ImageButton(startB);
                startButton.pad(10);
                
                startButton.addListener(new ClickListener(){
                        @Override
                        public void clicked(InputEvent event, float x, float y){
                                //game.setScreen(new GameScreen());
                                ((Game) Gdx.app.getApplicationListener()).setScreen(new GameScreen(game));
                        }
                }
                );
                
                quitButton = new ImageButton(quitB);
                quitButton.pad(10);
                
                quitButton.addListener(new ClickListener(){
                        @Override
                        public void clicked(InputEvent event, float x, float y){
                                Gdx.app.exit();
                        }
                }
                );
                
                
                // Add buttons
                table.add(startButton);
                table.add(quitButton);
        //		table.debug();
                // Add table to stage
                stage.addActor(table);
        
        }

        @Override
        public void hide() {
                
                
        }

        @Override
        public void pause() {
        
                
        }

        @Override
        public void resume() {
                
                
        }

        @Override
        public void dispose() {
                
                
        }

}
